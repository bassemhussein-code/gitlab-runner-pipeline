---
stages:
  - build
  - test
  - release
  - deploy
  - clean_up
  - operate

test:
  stage: test
  tags:
    - ci 
  script:
    - mvn --batch-mode verify sonar:sonar -Dsonar.host.url=http://sonar_server:8181 -Dsonar.token=sqp_39f70b9eb6aca9aeece75bdd52db4affa9d5762b  --offline

build:
  stage: build
  tags: 
    - ci 
  script: 
    - mvn clean install -Dmaven.test.skip=true --offline

  
release:
  stage: release
  tags:
    - ci
  script:
    - docker build -t eureka-project  .
  variables:
    GIT_STRATEGY: none
deploy:
  stage: deploy
  tags:
    - ci
  script:
    - echo "admin" | docker login -u "admin"
      --password-stdin  nexus_ip:8085
    - docker tag eureka-project:latest nexus_ip:8085/eureka-project:$CI_COMMIT_SHORT_SHA
    - docker push nexus_ip:8085/eureka-project:$CI_COMMIT_SHORT_SHA

clean up:
  stage : clean_up
  tags: 
    - ci 
  script:
    - images=$(docker image ls | grep -v "nexus_ip:8080/eureka-project:latest" | grep "eureka"  | awk '{print $3}')
    - docker image rm $images -f 

operate:
  stage : operate 
  tags:
    - ci 
  script:
    - sed -i "s/\$CI_COMMIT_SHORT_SHA/${CI_COMMIT_SHORT_SHA}/g" manifests/euerka-deployment.yaml 
    - git clone  git@gitlab.example.com:root/first_project_argo.git
    - cp -r manifests/ first_project_argo/
    #- git remote remove org
    - cd first_project_argo/
    - git add . 
    - git config user.email "************"
    - git config user.name "*************"
    - git config user.password '*********'
    - git remote add org  git@gitlab.example.com:root/first_project_argo.git
    - git commit -m "sync gitlab repo with argocd to deploy to kubernetes commit hash:${CI_COMMIT_SHORT_SHA}"
    - git push -u org 
    - cd ../ 
    - rm -Rf first_project_argo/  
 

    


